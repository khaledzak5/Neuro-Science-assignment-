# -*- coding: utf-8 -*-
"""Neuro Science Assignment 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bbWGB3jP461APVUgVZOvoK5imMdXe9H1
"""

import torch
import torch.nn.functional as F
import torch.nn as nn

#Neural Network Building

class FirstNN(nn.Module):
    def __init__(self):
        super(FirstNN, self).__init__()
        self.hidden = nn.Linear(2, 2)  #  From Input Layer to hidden layer
        self.output = nn.Linear(2, 1)  # Fom Hidden  Layer to output layer
        self._initialize_weights()

    def _initialize_weights(self):
        nn.init.constant_(self.hidden.bias, 0.5)
        nn.init.constant_(self.output.bias, 0.7)
        nn.init.uniform_(self.hidden.weight, -0.5, 0.5)
        nn.init.uniform_(self.output.weight, -0.5, 0.5)


    def forward(self, x):
        x = torch.tanh(self.hidden(x))#Using Tanh activation function in hidden Layers
        x = torch.tanh(self.output(x))#Using Tanh activation function in Output Layers
        return x

model=FirstNN()

input_tensor = torch.tensor([0.5, 0.5], dtype=torch.float32)

output = model(input_tensor)

print("Neural Network Result:", output.item())

